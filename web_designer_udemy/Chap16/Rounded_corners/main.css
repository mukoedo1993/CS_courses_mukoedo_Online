html, body {
    padding: 0;
    margin: 0;
}

input {
    font-size: 14px;
    font-family: Helvetica, sans-serif;
}

body {
    background-color: #BBB;
    font-family: Helvetica, sans-serif;
    padding-bottom: 100px;
}

h2, h3 {
    margin: 0 0 .75em 0;
}

/*first example*/

.container {
    max-width: 750px;
    margin: 20px auto 0 auto;
    padding: 30px;
    background-color: #FFF;
}

.form-row {
    padding: 10px 0;
    display: flex;
}

.form-row label {
    padding-right: 10px;
}

.form-row input {
    flex: 1;
}

/*!Without writing any other code, 
    just put display in the container
    display: flex;
    */

.column-layout {
    max-width: 1000px;
    background-color: #FFF;
    margin: 40px auto 0 auto;
    line-height: 1.65;
    padding: 20px 50px;
    display: flex;
}

/*!
We want the main column to be third as large
as sidebar.
*/

.main-column {
    flex: 3;
    order: 2;
}

.form-row {
    padding: 10px 0;
    display: flex;
}

.form-row label {
    padding-right: 10px;
}

.form-row input {
    flex: 1;
}

.sidebar-one {
    flex: 1;
    order: 1;
}

.sidebar-two {
    flex: 1;
    order: 3;
}

.call-outs-container {}

/*
align-items: flex-start: fixed starting position
align-items: flex-end fixed ending position
...: none forced justify at both starting position and ending position
...: center centered-vertically
...: stretch == NONE
*/

/*
justify-content: flex-start: justify content to the left
...: flex-end: ... to the right
...: center: ... center
...: 
*/

@media (min-width: 900px) {
    .call-outs-container {
        max-width: 1400px;
        margin: 40px auto 0 auto;
        align-items: stretch;
        display: flex;
        justify-content: space-between;
    }
    .call-out {
        padding: 20px;
        margin-bottom: 20px;
        box-sizing: border-box;
        margin-bottom: 20px;
        width: 30%;
        /*column takes up 90 percent of width , 10 percent will be left with margin.*/
        flex-basis: 30%;
    }
}

@media (max-width: 899px) {
    .call-outs-container {
        width: 100%;
    }
    .call-out {
        width: 100%;
        margin: 0;
        padding: 0;
    }
}

/*

flex-box way to specify a particular size.
flex-basis:
*/

.call-out:last-child {}

/*Note that even though each child has different size of content, they work in the same way.*/

.call-out:nth-child(1) {
    background-color: #c0dbe2;
}

.call-out:nth-child(2) {
    background-color: #cdf1c3;
}

.call-out:nth-child(3) {
    background-color: pink;
}

/* fourth example */

.fixed-size-container {
    max-width: 1400px;
    margin: 40px auto 0 auto;
    background-color: #FFF;
    padding: 30px 0;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-wrap: wrap;
}

.fixed-size {
    width: 150px;
    height: 100px;
    background-color: #990b47;
    color: #FFF;
    line-height: 100px;
    text-align: center;
    font-weight: bold;
    font-size: 60px;
    margin-bottom: 20px;
}

/*5th example*/

.banner {
    height: 400px;
    max-width: 700px;
    margin: 40px auto 40px auto;
    background-color: #2a2a2a;
    display: flex;
}

/**
Since the dawn of time, it has been a bit tricky to center
content....
*/

.center-me {
    color: #FFF;
    font-size: 50px;
    margin: auto;
}

/* 6th example */

/*
We want to divide blue and green part vertically
in half.
*/

.equal-height-container {
    max-width: 900px;
    margin: 0 auto;
    display: flex;
}

.first {
    background-color: #FFF;
    padding: 20px;
    flex: 1;
}

.second {
    background-color: yellow;
    flex: 1;
    display: flex;
    flex-direction: column;
    /*By default, it is set as row.
        column: divide it up and share the available vertical space.
        */
}

/*nested flex element*/

.second-a {
    background-color: #c0dbe2;
    flex: 1;
}

.second-b {
    background-color: #cdf1c3;
    flex: 1;
}

.box-a {
    background-color: #e7eff5;
    padding: 20px 20px 0 20px;
    border: 2px solid #d3dee7;
    margin-bottom: 30px;
    box-shadow: 10px 2px 5px #000;
}
.box-a-1 {
    box-shadow: 10px 2px 5px #000;
    border-radius: 10px;
/*See box 1 for all four corners*/
}

.box-b {
    box-shadow: inset 3px 3px 5px rgba(0, 0, 0, .45), -10px 2px 5px #000;
    border-radius: 35px 10px;
    /*see box 2
    first value: top-left and bottom-right
    second value: top-right and bottom-left; */
}

.box-c {
    box-shadow: inset -10px -2px 5px rgba(0, 0, 0, .45);
    /*Pushes the shadow inset.*/

    border-radius: 10px 10px 25px 25px; /*start from top-right.
    clockwise*/
}

.box-d {
    box-shadow: 10px 5px 5px rgba(0, 0, 0, .5);
    border-radius: 10px/25px;/*a different shape ellipse horizontal radius vertical radius*/
}

.box-e {
    width:200px;
    height:200px;
    box-shadow: 10px 5px 5px rgba(0, 0, 0, .15);
    border-radius: 50%;
    line-height: 950%;
    font-size: 20px;
}

.box-f {
    border-radius: 30%/40%;
    box-shadow: 10px 5px 5px rgba(0, 0, 0, .15);
    border-radius: 50%;
    line-height: 700%;
    font-size: 15px;
}

